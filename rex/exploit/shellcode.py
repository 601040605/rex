import logging
l = logging.getLogger("rex.exploit.shellcode")

class Shellcode(object):
    '''
    describes a piece of shellcode, meant only as a super class
    '''

    # string describing the OS this shellcode applies to
    os = None

    # string describing the architecture this shellcode runs on
    arch = None

    # hexadecimal string representing the shellcode itself
    hex_code = None

    def apply_options(self, **kwargs):
        '''
        some shellcodes may want to implement interpretation options, for example
        with a connect back shellcode we will want to be able to specify a host and port
        '''
        raise NotImplementedError
